name: Auto Release from URLs (Retry Enabled)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name for release (e.g. v1.0.0)'
        required: true
      release_name:
        description: 'Optional release name (defaults to tag name)'
        required: false

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check gh CLI
        run: gh --version

      # Create or reuse release
      - name: Create or update release
        run: |
          gh release view "${{ inputs.tag }}" >/dev/null 2>&1 || \
          gh release create "${{ inputs.tag }}" \
            --title "${{ inputs.release_name || inputs.tag }}" \
            --notes "Automated release for tag ${{ inputs.tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Stream & upload files with retry
      - name: Stream and upload files with retry
        run: |
          mkdir -p tmp
          while IFS= read -r url; do
            [ -z "$url" ] && continue
            name=$(curl -sIL -o - "$url" | grep -i 'content-disposition:' | \
                    sed -n 's/.*filename=["'\'']\?\([^"'\'';]*\).*/\1/p' | tail -n1)
            if [ -z "$name" ]; then
              name=$(basename "${url%%\?*}")
            fi
            echo "⬇️  Downloading & uploading: $name"

            max_attempts=10
            attempt=1
            success=false

            while [ $attempt -le $max_attempts ]; do
              echo "Attempt $attempt of $max_attempts..."
              curl -L "$url" -o "tmp/$name"
              if [ $? -eq 0 ]; then
                gh release upload "${{ inputs.tag }}" "tmp/$name" --clobber
                rm -f "tmp/$name"
                success=true
                echo "✅ Uploaded $name successfully."
                break
              else
                echo "⚠️ Attempt $attempt failed. Retrying..."
                rm -f "tmp/$name"
                sleep $((attempt * 5))  # exponential backoff (5s, 10s, 15s, ...)
                attempt=$((attempt + 1))
              fi
            done

            if [ "$success" = false ]; then
              echo "❌ Failed to download/upload $name after $max_attempts attempts."
              exit 1
            fi
          done < urls.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
