name: Auto Release from URLs (Stream Uploads)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name for release (e.g. v1.0.0)'
        required: true
      release_name:
        description: 'Optional release name (defaults to tag name)'
        required: false

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Ensure gh CLI is available (usually preinstalled on GitHub-hosted runners)
      - name: Check gh CLI
        run: gh --version

      # Step 1: Create or update the release
      - name: Create or update release
        run: |
          gh release view "${{ inputs.tag }}" >/dev/null 2>&1 || \
          gh release create "${{ inputs.tag }}" \
            --title "${{ inputs.release_name || inputs.tag }}" \
            --notes "Automated release for tag ${{ inputs.tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Stream and upload each file directly
      - name: Stream and upload files
        run: |
          while IFS= read -r url; do
            [ -z "$url" ] && continue
            echo "Uploading from $url ..."
            # Fetch filename from header if possible
            name=$(curl -sIL -o - "$url" | grep -i 'content-disposition:' | \
                    sed -n 's/.*filename=["'\'']\?\([^"'\'';]*\).*/\1/p' | tail -n1)
            if [ -z "$name" ]; then
              name=$(basename "${url%%\?*}")  # fallback if header missing
            fi
            echo "â†’ Uploading as: $name"
            # Stream directly from curl into gh release upload
            curl -L "$url" | gh release upload "${{ inputs.tag }}" - \
              --clobber --name "$name"
          done < urls.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
